services:
  app:
    image: todo_frontend_dev
    build:
      context: ./todo-frontend/ # The context will pick this directory as the "build context"
      dockerfile: dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend/:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    ports:
      - 3000:3000
    environment:
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    container_name: todo_frontend_dev # This will name the container hello-front-dev
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80 # this is needed
    container_name: reverse-proxy
    depends_on:
      - app
  mongo:
    image: mongo
    user: root
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - mongo_data:/data/db
  mongo-debug:
    image: mongo
    user: root
    ports:
      - 3457:27018
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
  redisdb:
    image: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6379:6379
    volumes:
      - ./todo-backend/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./todo-backend/redis_data:/data
    command: [ 'redis-server', '--appendonly', 'yes' ] # Overwrite the CMD
  server:
    image: todo_backend_dev
    build:
      context: ./todo-backend/
      dockerfile: dev.Dockerfile
    volumes:
      - ./todo-backend/:/usr/src/app
    ports:
      - 3001:3001
    environment:
      - REDIS_URL=redis://redisdb:6379
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
  debug-helper:
    image: busybox

volumes:
  mongo_data:
